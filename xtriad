#!/usr/bin/wish
#
# xtriad: A simple graphical user interface for triad
# Copyright (C) 2000-2015 John C. Bowman (bowman@ualberta.ca)
#   
#This program is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation; either version 2 of the License, or
#(at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA. */
#
# =========================== title ====================================
set movieprog "mplayer"
set movieopt "-nofs -idle -fixed-vo"

cd ~/dns
set colour "lemon chiffon"
. configure -background $colour
frame .title -background $colour
label .title.label -text { X T R I A D   1.45} -font "-*-new century schoolbook-*-*-*-*-*-240-*-*-*-*-*-*" -borderwidth 25 -relief raised -background sienna -foreground yellow

pack .title.label -anchor center -fill x -pady 20

# =========================== resolution ====================================

frame .resolution -relief raised -borderwidth 2
menubutton .resolution.menu -text {resolution} \
           -menu {.resolution.menu.sub} -relief sunken

menu .resolution.menu.sub -tearoff {0} 

label .resolution.x_res_label -text "Nx"

#Allow user selection only:
label .resolution.x_resolution -width 5 -relief raised -textvariable Nx
#Allow user input values:
#entry .resolution.x_resolution -width 5 -relief raised -textvariable Nx
set Nx 63

label .resolution.y_res_label -text "Ny"
label .resolution.y_resolution -width 5 -relief raised -textvariable Ny
set Ny 63

.resolution.menu.sub add command -command {setres 63 63} -label {63x63}
.resolution.menu.sub add command -command {setres 127 127} -label {127x127}
.resolution.menu.sub add command -command {setres 255 255} -label {255x255}
.resolution.menu.sub add command -command {setres 511 511} -label {511x511}

pack .resolution.menu \
     .resolution.x_res_label .resolution.x_resolution \
     .resolution.y_res_label .resolution.y_resolution \
	 -anchor s

# ================== SET RESOLUTION  ===================

proc setres {xres yres} \
{
  global Nx
  global Ny

  set Nx $xres
  set Ny $yres
}

# =========================== integrator ====================================

frame .integrator -relief raised -borderwidth 2

menubutton .integrator.menu -text {integrator} \
           -menu {.integrator.menu.sub} -relief sunken

menu .integrator.menu.sub -tearoff {0} 
label .integrator.label -width 5 -textvariable integrator

.integrator.menu.sub add command -command {set integrator euler} -label {Euler}
.integrator.menu.sub add command -command {set integrator pc} -label {Predictor-Corrector}
.integrator.menu.sub add command -command {set integrator e-pc} -label {Exponential Predictor-Corrector}
.integrator.menu.sub add command -command {set integrator e-rk3} -label {Third-Order Exponential Bogacki-Shampine Runge Kutta}
.integrator.menu.sub add command -command {set integrator c-pc} -label {Conservative Predictor-Corrector}
.integrator.menu.sub add command -command {set integrator ce-pc} -label {Conservative Exponential Predictor-Corrector}
.integrator.menu.sub add command -command {set integrator leapfrog} -label {Leapfrog}
.integrator.menu.sub add command -command {set integrator rk2} -label {Second-Order Runge Kutta}
.integrator.menu.sub add command -command {set integrator rk4} -label {Fourth-Order Runge Kutta}
.integrator.menu.sub add command -command {set integrator rk5} -label {Fifth-Order Runge Kutta}
.integrator.menu.sub add command -command {set integrator c-rk5} -label {Conservative Fifth-Order Runge Kutta}

pack .integrator.menu .integrator.label -fill x -anchor s
set integrator "rk5"

# =========================== Parameters =============================

frame .parameter -background $colour

# =========================== dt =============================

frame .parameter.dt -relief raised -borderwidth 2 
label .parameter.dt.label -text "dt"
entry .parameter.dt.parameters -width 10 -textvariable dt
bind .parameter.dt.parameters

pack .parameter.dt.label .parameter.dt.parameters
set dt 1.0e-6

# =========================== kforce =============================

frame .parameter.kforce -relief raised -borderwidth 2 
label .parameter.kforce.label -text "kforce"
entry .parameter.kforce.parameters -width 10 -textvariable kforce
bind .parameter.kforce.parameters

pack .parameter.kforce.label .parameter.kforce.parameters
set kforce 4.0

# =========================== deltaf =============================

frame .parameter.deltaf -relief raised -borderwidth 2 
label .parameter.deltaf.label -text "deltaf"
entry .parameter.deltaf.parameters -width 10 -textvariable deltaf
bind .parameter.deltaf.parameters

pack .parameter.deltaf.label .parameter.deltaf.parameters
set deltaf 1.0

# =========================== eta =============================

frame .parameter.eta -relief raised -borderwidth 2 
label .parameter.eta.label -text "eta"
entry .parameter.eta.parameters -width 10 -textvariable eta
bind .parameter.eta.parameters

pack .parameter.eta.label .parameter.eta.parameters
set eta 0.0

# =========================== nuH =============================

frame .parameter.nuH -relief raised -borderwidth 2 
label .parameter.nuH.label -text "nuH"
entry .parameter.nuH.parameters -width 10 -textvariable nuH
bind .parameter.nuH.parameters

pack .parameter.nuH.label .parameter.nuH.parameters
#set nuH 2.0e-8
set nuH 0.0

# =========================== pH =============================

frame .parameter.pH -relief raised -borderwidth 2 
label .parameter.pH.label -text "pH"
entry .parameter.pH.parameters -width 10 -textvariable pH
bind .parameter.pH.parameters

pack .parameter.pH.label .parameter.pH.parameters
set pH 0

# =========================== nuL =============================

frame .parameter.nuL -relief raised -borderwidth 2 
label .parameter.nuL.label -text "nuL"
entry .parameter.nuL.parameters -width 10 -textvariable nuL
bind .parameter.nuL.parameters

pack .parameter.nuL.label .parameter.nuL.parameters
set nuL 0.0

# =========================== pL =============================

frame .parameter.pL -relief raised -borderwidth 2 
label .parameter.pL.label -text "pL"
entry .parameter.pL.parameters -width 10 -textvariable pL
bind .parameter.pL.parameters

pack .parameter.pL.label .parameter.pL.parameters
set pL 0

# ======================= dynamic ==============================

set dynamic 1
frame .dynamic -relief raised -borderwidth 2 
checkbutton .dynamic.button -text {Use dynamic time stepping} -variable dynamic
pack .dynamic.button

# ======================= restart ==============================

set restart 0
frame .restart -relief raised -borderwidth 2 
checkbutton .restart.button -text {Restart previous run} -variable restart
pack .restart.button

# ======================= init ==============================
 
set init 0
frame .init -relief raised -borderwidth 2 
checkbutton .init.button -text {Initialize with previous run} -variable init
pack .init.button

# ======================= verbose ==============================
 
set verbose 0
frame .verbose -relief raised -borderwidth 2 
checkbutton .verbose.button -text {Verbose} -variable verbose
pack .verbose.button

# ======================= movie ==============================

set sample 0.1
set movie 1
set zoom 0
set maxframes 100

frame .movie -relief raised -borderwidth 2 
checkbutton .movie.button -text "Generate movie data for the most recent n frames" -variable movie
frame .movie.maxframes
label .movie.maxframes.label -text "n="
entry .movie.maxframes.value -width 10 -textvariable maxframes
pack .movie.maxframes.label -side left
pack .movie.maxframes.label .movie.maxframes.value
scale .movie.sample -from 0 -to 0.1 -resolution 0.001 -variable sample \
		-length 512 -orient horizontal -state normal -label {Sample interval:}
pack .movie.button .movie.maxframes .movie.sample

proc stop {} { \
exec sh -c "killmy triad" &
}

proc quit {} { \
global movieprog
exec sh -c "killmy triad asy $movieprog gv" &
exit
}

proc graph {a} \
{
exec sh -c "echo lab | asy -inpipe 0 -V $a" >& /dev/null &
}

proc image {a} \
{
exec sh -c "echo -e 'lab\n$a\n-1' | asy -inpipe 0 -V image" >& /dev/null &
}

proc movie {a} \
{
global maxframes
global movieprog
global movieopt
exec sh -c "killmy $movieprog"
exec sh -c "echo -e 'lab\n$a\n-$maxframes\n-1' | asy -inpipe 0 movie -f mpg; $movieprog $movieopt movie.mpg" >& /dev/null &
}

proc replay {} \
{
global movieprog
global movieopt
exec sh -c "killmy $movieprog"
exec sh -c "$movieprog $movieopt movie.mpg" >& /dev/null &
}

# =================== OPTIONAL PARAMETERS =============================

frame .optional -relief raised -borderwidth 2 
label .optional.label -text "Optional parameters:"
entry .optional.parameters -width 50 -textvariable parameters
bind .optional.parameters

pack .optional.label .optional.parameters

# =========================== RUN ====================================
frame .run -relief raised -borderwidth 2 

button .run.button -text "RUN" -background green -relief flat \
		-command {exec sh -c "killmy triad; nice triad run=lab threads=4 clobber=1 \
  Nx=$Nx Ny=$Ny dt=$dt nuH=$nuH pH=$pH nuL=$nuL pL=$pL \
  kforce=$kforce deltaf=$deltaf eta=$eta \
  integrator=$integrator \
  dynamic=$dynamic restart=$restart init=$init verbose=[expr {$verbose+1}] movie=$movie sample=$sample $parameters" &}

pack .run.button

# =========================== STOP ====================================
frame .stop -relief raised -borderwidth 2 
button .stop.button -text "STOP" -relief flat -background red \
-command {stop}

pack .stop.button

# =========================== GRAPH ====================================
frame .graph -relief raised -borderwidth 2 

menubutton .graph.menu -text "GRAPH" -relief flat -background lightblue -menu {.graph.menu.sub}

menu .graph.menu.sub -tearoff {0} 

.graph.menu.sub add command -command {graph e} -label {Evolution of E and Z}
.graph.menu.sub add command -command {graph ekvk} -label {Energy Spectrum}
.graph.menu.sub add command -command {graph slope} -label {Logarithmic Slope}
.graph.menu.sub add command -command {graph transfer} -label {Energy Transfer}
.graph.menu.sub add command -command {graph transferz} -label {Enstrophy Transfer}
.graph.menu.sub add command -command {image w} -label {Vorticity Field}
#.graph.menu.sub add command -command {image psi} -label {Stream Function Field}
#.graph.menu.sub add command -command {image weiss} -label {Weiss Q Field}

pack .graph.menu

# =========================== MAKEMOVIE ====================================

frame .makemovie -relief raised -borderwidth 2 

menubutton .makemovie.menu -text "MOVIE" -relief flat -background lightblue -menu {.makemovie.menu.sub}

menu .makemovie.menu.sub -tearoff {0} 

.makemovie.menu.sub add command -command {movie w} -label {Vorticity}
#.makemovie.menu.sub add command -command {movie psi} -label {Stream Function}
#.makemovie.menu.sub add command -command {movie weiss} -label {Weiss Q}

pack .makemovie.menu

# =========================== REPLAYMOVIE ====================================

frame .replay -relief raised -borderwidth 2 
button .replay.button -text "REPLAY" -relief flat -background red \
-command {replay}

pack .replay.button

# =========================== QUIT ====================================
frame .quit -relief raised -borderwidth 2 
button .quit.button -text "QUIT" -relief flat -background blue -foreground white \
-command {quit}

pack .quit.button

pack .title
pack .resolution -fill x 
pack .parameter.pL -padx 5 -pady 5 -side right
pack .parameter.nuL -padx 5 -pady 5 -side right
pack .parameter.deltaf -padx 5 -pady 5 -side right
pack .parameter.kforce -padx 5 -pady 5 -side right
pack .parameter.eta -padx 5 -pady 5 -side right
pack .parameter.pH -padx 5 -pady 5 -side right
pack .parameter.nuH -padx 5 -pady 5 -side right
pack .parameter.dt -padx 5 -pady 5 -side right 
pack .parameter
pack .integrator -padx 5 -pady 5
pack .dynamic -padx 5 -pady 5
pack .restart -padx 5 -pady 5
pack .init -padx 5 -pady 5
pack .verbose -padx 5 -pady 5
pack .movie -padx 5 -pady 5
pack .optional -padx 5 -pady 5 -anchor s
pack .resolution -side left -padx 5 -pady 5
pack .quit -side bottom -side right -padx 80 -pady 5
pack .replay -side bottom -side right -padx 30 -pady 5
pack .makemovie -side bottom -side right -padx 30 -pady 5
pack .graph -side bottom -side right -padx 30 -pady 5
pack .stop -side bottom -side right -padx 30 -pady 5
pack .run -side right -padx 30 -pady 5

#signal trap SIGINT quit
