Referee #2 (Remarks to the Author): 
 
The paper covers very interesting and important class of numerical problem, dealiased convolution. It is pretty well written and very easy to follow, however, I'd like add some minor comments which might be useful to improve the manuscript. 
 
 
1. Timing charts (Fig 2.1, 2.3, 2.5, 3.1, 3.2, 5.1, 5.2) show that both explicit and implicit algorithms spend O(m log m) computation time, however, the differences of two methods are hard to see. How about plotting time per point (Time(m)/m, microsecond/points) as a function of m in log-log plot which will clearly show the difference of the computational cost (not the order but the constants). 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Done.
--------------------------------------------------------------------------------

2. The author mentioned that some of FT could be done out of place (for examples; Page4 Line4, Page8, Line8). Adding pros/cons about out-of-place calculation will help the readers to understand why it is an issue. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
The reason why out-of-place transform are typically faster is given at the
bottom of page 2. We have added a reference to a comparision of
typical out-of-place and in-place execution speeds.
--------------------------------------------------------------------------------

3. All of the algorithms are described in both mathematical form and algorithmic form (in the boxes). It seems to be too much of kindness and some of them could be omitted to make the paper concise. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
The pseudocode is necessary to describe the algorithms at a more detailed level.
A crucial feature of the algorithms is that they can be implemented
entirely within the given arrays, and it is important to establish that
such an implementation is actually possible. Such information is not
available from the mathematical description and is difficult to ascertain
from the low-level source code (available separately). The more trivial
algorithms like fftpadBackwards/fftpadForwards are included because they are
referenced by other algorithms.
--------------------------------------------------------------------------------

4. Section 3 and 4 deal with the same mathematical idea so maybe combined together in one section. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Done.
--------------------------------------------------------------------------------

5. Figure 2.5 should be labeled as Figure 3.1. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Fixed.
--------------------------------------------------------------------------------

6. Page 4. Second paragraph (In Principle, ... with -eps/10.) seems to be in somewhat different level of description than the paper. 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
We relegated this robustness correction to Buneman's scheme to a footnote.
--------------------------------------------------------------------------------
 
Referee #1 (Remarks to the Author): 
 
This paper explores some practical aspects of the implementation of 
linear convolutions via FFT. Since the FFT computes cyclic 
convolutions, such an implementation requires padding the inputs with 
zeros. This padding is annoying in practice because 1) it consumes 
extra memory, and 2) it force users of the convolution library to 
change the representation of the input. This paper solves problem 2) 
in general, and problem 1) for 2- and higher-dimensional convolutions. 
 
None of the ideas in the paper are really new, and the authors do not 
reference the existing literature on the topic at all. I think the 
first paper on the topic is the 1971 paper ``FFT Pruning' by 
J.D. Markel. Sorensen and Burrus also wrote on this topic, and the 
SPIRAL group at CMU also looked at this problem recently. (These 
references MUST be added if the paper is to be published.) 
 
Nevertheless, the main idea of the paper (that the intermediate arrays 
need not be contiguous) is somewhat original and I don't recall seeing 
it before. This fact, combined with the realistic experiments 
performed by the authors and the availability of the software, makes 
the paper worthy of publication in my opinion. 
 
Detailed comments: 
 
* Related work MUST be referenced and compared. While you are at it, 
 please note that Gauss' paper [8] ends in the middle of on page 327 
 and not on page 330. (The final words are ``... quae functiones 
 quaesitae partem invariablem constituit.') 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Done.
--------------------------------------------------------------------------------

* Introduction, second paragraph: ``Because the discrete 
 convolution, which produces cyclic output from cyclic input...' 
 
 You probably want to say ``convolution via FFT' instead of 
 ``discrete'. Many applications exist that just compute discrete 
 convolutions via brute-force multiply/add, thus sidestepping the 
 whole issue. 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Agreed. We have changed the phrase in question to "FFT-based convolution".
--------------------------------------------------------------------------------

* Introduction: Please give a reference for the constant (9/2)K, which 
 is not obvious to me. 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
We added further explanation here:
"Since the computational cost of complex-to-real and real-to-complex Fourier
transforms of size~$N=3m$ is asymptotic to $\half K N\log_2 N$, ...".
--------------------------------------------------------------------------------

* Last full paragrph of page 2: the comment that out-of-place 
 transforms always execute faster than in-place transforms is 
 incorrect. 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Here we added the phrase "typically" and a reference.
--------------------------------------------------------------------------------

* End of Section 2.1: ``since $\pi$ is irrational...' Why 
 does the irrationality of $\pi$ matter at all? Your statement 
 would be true even for $\pi=1$, $e=1$, or $i=0$. 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
We removed the phrase "Since pi is irrational".
--------------------------------------------------------------------------------

* Figure 2.1 and related figures are hard to read, because even 
 factors of 2 would be lost in the log-log graph. Maybe plot 
 t/(n log n) in linear scale versus n in log scale, or t_implicit/t_explicit, 
 or something like that that emphasises the difference between the 
 two methods. 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Done.
--------------------------------------------------------------------------------

* Section 2.2: I don't understand the problem being solved in this 
 section. Are you convolving a centered sequence of length 2m 
 with a sequence of length m, or two centered sequences of length 
 2m? If the latter is the case, why is the length of the output 
 3m instead of 4m? 
 
 This section is confusing because the ``centering' of the sequence 
 is completely irrelevant to the problem. What you are really saying 
 (I think) is that you can do a radix-3 variant of the method in 
 section 2.1 (regardless of the ``centering'). In addition, if you 
 renumber indices to be in the range [-m+1..m-1] instead of 
 [0..2m-1], you save a twiddle factor. You can always renumber 
 indices irrespective of whether the input is ``centered' or not. 

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
The issue here is not merely an optimization or an FFT index shift. The problem
being solved in this Section 2.2 is a centered Hermitian 1D convolution, as
defined at the beginning of the third paragraph on page 1. This
convolution, which appears in pseudospectral codes, requires less padding
(50%) than a standard convolution (100%), as explained in detail at the
beginning of Section 2.2. We have added a reference to Orszag 1971, which
is the first reference in the literature we know for this well-known "2/3 rule".
Here, two sequences of length 2m-1 are padded with m-1 zeros.
The centering of the sequence is crucial: the 2/3 padding rule only
applies to centered convolutions. While this particular application of the
FFT may not be well known in the field of image processing (for instance) it
is of great practical importance for the simulation of partial differential
equations that feature quadratic nonlinearity.
--------------------------------------------------------------------------------

* You use ``Hermiticity condition' and ``Hermitian symmetry' to 
 denote the same concept. Pick one and stick with it. 
 
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Done.
--------------------------------------------------------------------------------

 
 
 
 
 
 
 
 
 
 
 
 
 
 

